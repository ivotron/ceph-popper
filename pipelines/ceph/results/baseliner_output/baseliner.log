
2018-06-07 00:43:06,609 p=14 u=root |  PLAY [all] *********************************************************************
2018-06-07 00:43:06,615 p=14 u=root |  TASK [Gathering Facts] *********************************************************
2018-06-07 00:43:06,616 p=14 u=root |  Thursday 07 June 2018  00:43:06 +0000 (0:00:00.042)       0:00:00.042 ********* 
2018-06-07 00:43:09,594 p=14 u=root |  ok: [node1]
2018-06-07 00:43:09,612 p=14 u=root |  ok: [node2]
2018-06-07 00:43:09,617 p=14 u=root |  ok: [node3]
2018-06-07 00:43:09,625 p=14 u=root |  TASK [baseliner : include_tasks] ***********************************************
2018-06-07 00:43:09,625 p=14 u=root |  Thursday 07 June 2018  00:43:09 +0000 (0:00:03.009)       0:00:03.051 ********* 
2018-06-07 00:43:09,691 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/check_preconditions.yml for node1, node2, node3
2018-06-07 00:43:09,701 p=14 u=root |  TASK [baseliner : ensure expected variables are defined] ***********************
2018-06-07 00:43:09,701 p=14 u=root |  Thursday 07 June 2018  00:43:09 +0000 (0:00:00.075)       0:00:03.127 ********* 
2018-06-07 00:43:09,755 p=14 u=root |  ok: [node1] => {
    "changed": false, 
    "failed": false, 
    "msg": "All assertions passed"
}
2018-06-07 00:43:09,776 p=14 u=root |  ok: [node2] => {
    "changed": false, 
    "failed": false, 
    "msg": "All assertions passed"
}
2018-06-07 00:43:09,779 p=14 u=root |  ok: [node3] => {
    "changed": false, 
    "failed": false, 
    "msg": "All assertions passed"
}
2018-06-07 00:43:09,790 p=14 u=root |  TASK [baseliner : set remote results path if not defined] **********************
2018-06-07 00:43:09,790 p=14 u=root |  Thursday 07 June 2018  00:43:09 +0000 (0:00:00.089)       0:00:03.216 ********* 
2018-06-07 00:43:09,845 p=14 u=root |  ok: [node1]
2018-06-07 00:43:09,856 p=14 u=root |  ok: [node2]
2018-06-07 00:43:09,872 p=14 u=root |  ok: [node3]
2018-06-07 00:43:09,885 p=14 u=root |  TASK [baseliner : ensure results folder exists] ********************************
2018-06-07 00:43:09,885 p=14 u=root |  Thursday 07 June 2018  00:43:09 +0000 (0:00:00.095)       0:00:03.312 ********* 
2018-06-07 00:43:10,128 p=14 u=root |  ok: [node1 -> localhost]
2018-06-07 00:43:10,136 p=14 u=root |  TASK [baseliner : check that pre-tasks file exists] ****************************
2018-06-07 00:43:10,136 p=14 u=root |  Thursday 07 June 2018  00:43:10 +0000 (0:00:00.250)       0:00:03.562 ********* 
2018-06-07 00:43:10,155 p=14 u=root |  TASK [baseliner : check that post-tasks file exists] ***************************
2018-06-07 00:43:10,155 p=14 u=root |  Thursday 07 June 2018  00:43:10 +0000 (0:00:00.019)       0:00:03.581 ********* 
2018-06-07 00:43:10,198 p=14 u=root |  TASK [baseliner : ensure docker-engine is installed] ***************************
2018-06-07 00:43:10,199 p=14 u=root |  Thursday 07 June 2018  00:43:10 +0000 (0:00:00.043)       0:00:03.625 ********* 
2018-06-07 00:43:10,234 p=14 u=root |  TASK [baseliner : install statically linked docker] ****************************
2018-06-07 00:43:10,234 p=14 u=root |  Thursday 07 June 2018  00:43:10 +0000 (0:00:00.035)       0:00:03.660 ********* 
2018-06-07 00:43:10,272 p=14 u=root |  TASK [baseliner : ensure the docker daemon is running] *************************
2018-06-07 00:43:10,273 p=14 u=root |  Thursday 07 June 2018  00:43:10 +0000 (0:00:00.038)       0:00:03.699 ********* 
2018-06-07 00:43:10,311 p=14 u=root |  TASK [baseliner : stop any running container] **********************************
2018-06-07 00:43:10,311 p=14 u=root |  Thursday 07 June 2018  00:43:10 +0000 (0:00:00.038)       0:00:03.738 ********* 
2018-06-07 00:43:11,295 p=14 u=root |  fatal: [node1]: FAILED! => {"changed": true, "cmd": "docker stop `docker ps -q`", "delta": "0:00:00.042670", "end": "2018-06-06 18:43:11.259649", "failed": true, "msg": "non-zero return code", "rc": 1, "start": "2018-06-06 18:43:11.216979", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stderr_lines": ["\"docker stop\" requires at least 1 argument(s).", "See 'docker stop --help'.", "", "Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]", "", "Stop one or more running containers"], "stdout": "", "stdout_lines": []}
2018-06-07 00:43:11,295 p=14 u=root |  ...ignoring
2018-06-07 00:43:11,297 p=14 u=root |  fatal: [node2]: FAILED! => {"changed": true, "cmd": "docker stop `docker ps -q`", "delta": "0:00:00.044220", "end": "2018-06-06 18:43:11.260618", "failed": true, "msg": "non-zero return code", "rc": 1, "start": "2018-06-06 18:43:11.216398", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stderr_lines": ["\"docker stop\" requires at least 1 argument(s).", "See 'docker stop --help'.", "", "Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]", "", "Stop one or more running containers"], "stdout": "", "stdout_lines": []}
2018-06-07 00:43:11,297 p=14 u=root |  ...ignoring
2018-06-07 00:43:11,301 p=14 u=root |  fatal: [node3]: FAILED! => {"changed": true, "cmd": "docker stop `docker ps -q`", "delta": "0:00:00.044186", "end": "2018-06-06 18:43:11.266278", "failed": true, "msg": "non-zero return code", "rc": 1, "start": "2018-06-06 18:43:11.222092", "stderr": "\"docker stop\" requires at least 1 argument(s).\nSee 'docker stop --help'.\n\nUsage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]\n\nStop one or more running containers", "stderr_lines": ["\"docker stop\" requires at least 1 argument(s).", "See 'docker stop --help'.", "", "Usage:  docker stop [OPTIONS] CONTAINER [CONTAINER...]", "", "Stop one or more running containers"], "stdout": "", "stdout_lines": []}
2018-06-07 00:43:11,302 p=14 u=root |  ...ignoring
2018-06-07 00:43:11,308 p=14 u=root |  TASK [baseliner : remove containers to avoid name clashes] *********************
2018-06-07 00:43:11,308 p=14 u=root |  Thursday 07 June 2018  00:43:11 +0000 (0:00:00.996)       0:00:04.735 ********* 
2018-06-07 00:43:12,146 p=14 u=root |  fatal: [node1]: FAILED! => {"changed": true, "cmd": "docker rm `docker ps -qa`", "delta": "0:00:00.037448", "end": "2018-06-06 18:43:12.105305", "failed": true, "msg": "non-zero return code", "rc": 1, "start": "2018-06-06 18:43:12.067857", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stderr_lines": ["\"docker rm\" requires at least 1 argument(s).", "See 'docker rm --help'.", "", "Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]", "", "Remove one or more containers"], "stdout": "", "stdout_lines": []}
2018-06-07 00:43:12,147 p=14 u=root |  ...ignoring
2018-06-07 00:43:12,148 p=14 u=root |  fatal: [node3]: FAILED! => {"changed": true, "cmd": "docker rm `docker ps -qa`", "delta": "0:00:00.034456", "end": "2018-06-06 18:43:12.111881", "failed": true, "msg": "non-zero return code", "rc": 1, "start": "2018-06-06 18:43:12.077425", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stderr_lines": ["\"docker rm\" requires at least 1 argument(s).", "See 'docker rm --help'.", "", "Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]", "", "Remove one or more containers"], "stdout": "", "stdout_lines": []}
2018-06-07 00:43:12,148 p=14 u=root |  ...ignoring
2018-06-07 00:43:12,170 p=14 u=root |  fatal: [node2]: FAILED! => {"changed": true, "cmd": "docker rm `docker ps -qa`", "delta": "0:00:00.044429", "end": "2018-06-06 18:43:12.135367", "failed": true, "msg": "non-zero return code", "rc": 1, "start": "2018-06-06 18:43:12.090938", "stderr": "\"docker rm\" requires at least 1 argument(s).\nSee 'docker rm --help'.\n\nUsage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stderr_lines": ["\"docker rm\" requires at least 1 argument(s).", "See 'docker rm --help'.", "", "Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]", "", "Remove one or more containers"], "stdout": "", "stdout_lines": []}
2018-06-07 00:43:12,170 p=14 u=root |  ...ignoring
2018-06-07 00:43:12,180 p=14 u=root |  TASK [baseliner : store facts] *************************************************
2018-06-07 00:43:12,180 p=14 u=root |  Thursday 07 June 2018  00:43:12 +0000 (0:00:00.871)       0:00:05.606 ********* 
2018-06-07 00:43:12,236 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/store-facts.yml for node1, node2, node3
2018-06-07 00:43:12,253 p=14 u=root |  TASK [baseliner : install facter] **********************************************
2018-06-07 00:43:12,253 p=14 u=root |  Thursday 07 June 2018  00:43:12 +0000 (0:00:00.073)       0:00:05.679 ********* 
2018-06-07 00:43:13,655 p=14 u=root |  ok: [node1]
2018-06-07 00:43:13,675 p=14 u=root |  ok: [node3]
2018-06-07 00:43:13,681 p=14 u=root |  ok: [node2]
2018-06-07 00:43:13,690 p=14 u=root |  TASK [baseliner : create facts folder if it doesn't exist] *********************
2018-06-07 00:43:13,690 p=14 u=root |  Thursday 07 June 2018  00:43:13 +0000 (0:00:01.437)       0:00:07.117 ********* 
2018-06-07 00:43:13,797 p=14 u=root |  changed: [node1 -> localhost]
2018-06-07 00:43:13,808 p=14 u=root |  TASK [baseliner : store facts about remotes] ***********************************
2018-06-07 00:43:13,808 p=14 u=root |  Thursday 07 June 2018  00:43:13 +0000 (0:00:00.117)       0:00:07.235 ********* 
2018-06-07 00:43:14,195 p=14 u=root |  changed: [node1 -> localhost] => (item=node1)
2018-06-07 00:43:14,383 p=14 u=root |  changed: [node1 -> localhost] => (item=node2)
2018-06-07 00:43:14,581 p=14 u=root |  changed: [node1 -> localhost] => (item=node3)
2018-06-07 00:43:14,588 p=14 u=root |  TASK [baseliner : start monitoring] ********************************************
2018-06-07 00:43:14,588 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.779)       0:00:08.015 ********* 
2018-06-07 00:43:14,628 p=14 u=root |  TASK [baseliner : include_tasks] ***********************************************
2018-06-07 00:43:14,628 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.039)       0:00:08.054 ********* 
2018-06-07 00:43:14,666 p=14 u=root |  TASK [baseliner : get number of repetitions] ***********************************
2018-06-07 00:43:14,667 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.038)       0:00:08.093 ********* 
2018-06-07 00:43:14,724 p=14 u=root |  ok: [node1] => (item=1)
2018-06-07 00:43:14,732 p=14 u=root |  ok: [node2] => (item=1)
2018-06-07 00:43:14,744 p=14 u=root |  ok: [node3] => (item=1)
2018-06-07 00:43:14,752 p=14 u=root |  TASK [baseliner : execute each benchmark] **************************************
2018-06-07 00:43:14,752 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.085)       0:00:08.178 ********* 
2018-06-07 00:43:14,820 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/run-bench.yml for node1, node2, node3
2018-06-07 00:43:14,843 p=14 u=root |  TASK [baseliner : upload files] ************************************************
2018-06-07 00:43:14,843 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.090)       0:00:08.269 ********* 
2018-06-07 00:43:14,881 p=14 u=root |  TASK [baseliner : initialize parameters and add number of repetitions] *********
2018-06-07 00:43:14,881 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.038)       0:00:08.308 ********* 
2018-06-07 00:43:14,942 p=14 u=root |  ok: [node1]
2018-06-07 00:43:14,950 p=14 u=root |  ok: [node2]
2018-06-07 00:43:14,960 p=14 u=root |  ok: [node3]
2018-06-07 00:43:14,969 p=14 u=root |  TASK [baseliner : unnest parameters when parameters for benchmark were passed] ***
2018-06-07 00:43:14,969 p=14 u=root |  Thursday 07 June 2018  00:43:14 +0000 (0:00:00.087)       0:00:08.395 ********* 
2018-06-07 00:43:15,005 p=14 u=root |  TASK [baseliner : parametrized execution] **************************************
2018-06-07 00:43:15,006 p=14 u=root |  Thursday 07 June 2018  00:43:15 +0000 (0:00:00.036)       0:00:08.432 ********* 
2018-06-07 00:43:15,091 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/run-bench-parametrized.yml for node1, node2, node3
2018-06-07 00:43:15,102 p=14 u=root |  TASK [baseliner : remove remote results folder] ********************************
2018-06-07 00:43:15,103 p=14 u=root |  Thursday 07 June 2018  00:43:15 +0000 (0:00:00.097)       0:00:08.529 ********* 
2018-06-07 00:43:15,936 p=14 u=root |  ok: [node1]
2018-06-07 00:43:15,938 p=14 u=root |  ok: [node3]
2018-06-07 00:43:15,940 p=14 u=root |  ok: [node2]
2018-06-07 00:43:15,948 p=14 u=root |  TASK [baseliner : create remote results folder] ********************************
2018-06-07 00:43:15,948 p=14 u=root |  Thursday 07 June 2018  00:43:15 +0000 (0:00:00.845)       0:00:09.374 ********* 
2018-06-07 00:43:16,757 p=14 u=root |  changed: [node1]
2018-06-07 00:43:16,760 p=14 u=root |  changed: [node2]
2018-06-07 00:43:16,764 p=14 u=root |  changed: [node3]
2018-06-07 00:43:16,773 p=14 u=root |  TASK [baseliner : initialize parameter dictionary] *****************************
2018-06-07 00:43:16,773 p=14 u=root |  Thursday 07 June 2018  00:43:16 +0000 (0:00:00.825)       0:00:10.200 ********* 
2018-06-07 00:43:16,835 p=14 u=root |  ok: [node1]
2018-06-07 00:43:16,838 p=14 u=root |  ok: [node2]
2018-06-07 00:43:16,852 p=14 u=root |  ok: [node3]
2018-06-07 00:43:16,859 p=14 u=root |  TASK [baseliner : populate parameter dictionary] *******************************
2018-06-07 00:43:16,859 p=14 u=root |  Thursday 07 June 2018  00:43:16 +0000 (0:00:00.085)       0:00:10.285 ********* 
2018-06-07 00:43:16,915 p=14 u=root |  ok: [node1] => (item=[u'repetition', u'1'])
2018-06-07 00:43:16,925 p=14 u=root |  ok: [node2] => (item=[u'repetition', u'1'])
2018-06-07 00:43:16,939 p=14 u=root |  ok: [node3] => (item=[u'repetition', u'1'])
2018-06-07 00:43:16,947 p=14 u=root |  TASK [baseliner : merge default variables to the benchmark-specific options] ***
2018-06-07 00:43:16,947 p=14 u=root |  Thursday 07 June 2018  00:43:16 +0000 (0:00:00.088)       0:00:10.374 ********* 
2018-06-07 00:43:17,002 p=14 u=root |  ok: [node1]
2018-06-07 00:43:17,016 p=14 u=root |  ok: [node2]
2018-06-07 00:43:17,028 p=14 u=root |  ok: [node3]
2018-06-07 00:43:17,034 p=14 u=root |  TASK [baseliner : initialize string for path] **********************************
2018-06-07 00:43:17,035 p=14 u=root |  Thursday 07 June 2018  00:43:17 +0000 (0:00:00.087)       0:00:10.461 ********* 
2018-06-07 00:43:17,091 p=14 u=root |  ok: [node1]
2018-06-07 00:43:17,109 p=14 u=root |  ok: [node2]
2018-06-07 00:43:17,118 p=14 u=root |  ok: [node3]
2018-06-07 00:43:17,126 p=14 u=root |  TASK [baseliner : add key/value pairs for each parameter (if any)] *************
2018-06-07 00:43:17,126 p=14 u=root |  Thursday 07 June 2018  00:43:17 +0000 (0:00:00.091)       0:00:10.553 ********* 
2018-06-07 00:43:17,192 p=14 u=root |  ok: [node1] => (item={'key': u'repetition', 'value': u'1'})
2018-06-07 00:43:17,199 p=14 u=root |  ok: [node2] => (item={'key': u'repetition', 'value': u'1'})
2018-06-07 00:43:17,207 p=14 u=root |  ok: [node3] => (item={'key': u'repetition', 'value': u'1'})
2018-06-07 00:43:17,216 p=14 u=root |  TASK [baseliner : ensure output folder exists] *********************************
2018-06-07 00:43:17,216 p=14 u=root |  Thursday 07 June 2018  00:43:17 +0000 (0:00:00.089)       0:00:10.642 ********* 
2018-06-07 00:43:17,354 p=14 u=root |  changed: [node1 -> localhost]
2018-06-07 00:43:17,363 p=14 u=root |  changed: [node2 -> localhost]
2018-06-07 00:43:17,389 p=14 u=root |  changed: [node3 -> localhost]
2018-06-07 00:43:17,396 p=14 u=root |  TASK [baseliner : run containerized benchmark] *********************************
2018-06-07 00:43:17,396 p=14 u=root |  Thursday 07 June 2018  00:43:17 +0000 (0:00:00.180)       0:00:10.823 ********* 
2018-06-07 00:43:17,526 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/run-container.yml for node1, node2, node3
2018-06-07 00:43:17,549 p=14 u=root |  TASK [baseliner : check if image already exists] *******************************
2018-06-07 00:43:17,549 p=14 u=root |  Thursday 07 June 2018  00:43:17 +0000 (0:00:00.152)       0:00:10.975 ********* 
2018-06-07 00:43:18,415 p=14 u=root |  changed: [node2]
2018-06-07 00:43:18,417 p=14 u=root |  changed: [node1]
2018-06-07 00:43:18,420 p=14 u=root |  changed: [node3]
2018-06-07 00:43:18,430 p=14 u=root |  TASK [baseliner : pull image] **************************************************
2018-06-07 00:43:18,430 p=14 u=root |  Thursday 07 June 2018  00:43:18 +0000 (0:00:00.881)       0:00:11.857 ********* 
2018-06-07 00:43:20,089 p=14 u=root |  changed: [node1]
2018-06-07 00:43:20,176 p=14 u=root |  changed: [node2]
2018-06-07 00:43:20,177 p=14 u=root |  changed: [node3]
2018-06-07 00:43:20,186 p=14 u=root |  TASK [baseliner : define name of container] ************************************
2018-06-07 00:43:20,186 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:01.755)       0:00:13.613 ********* 
2018-06-07 00:43:20,239 p=14 u=root |  ok: [node1]
2018-06-07 00:43:20,257 p=14 u=root |  ok: [node2]
2018-06-07 00:43:20,264 p=14 u=root |  ok: [node3]
2018-06-07 00:43:20,274 p=14 u=root |  TASK [baseliner : initialize docker_flags variable] ****************************
2018-06-07 00:43:20,274 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.087)       0:00:13.700 ********* 
2018-06-07 00:43:20,326 p=14 u=root |  ok: [node1]
2018-06-07 00:43:20,339 p=14 u=root |  ok: [node2]
2018-06-07 00:43:20,350 p=14 u=root |  ok: [node3]
2018-06-07 00:43:20,357 p=14 u=root |  TASK [baseliner : add environment to docker_flags] *****************************
2018-06-07 00:43:20,357 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.083)       0:00:13.784 ********* 
2018-06-07 00:43:20,394 p=14 u=root |  TASK [baseliner : add implicit environment from bench_params variable] *********
2018-06-07 00:43:20,395 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.037)       0:00:13.821 ********* 
2018-06-07 00:43:20,462 p=14 u=root |  ok: [node1] => (item={'key': u'repetition', 'value': u'1'})
2018-06-07 00:43:20,467 p=14 u=root |  ok: [node2] => (item={'key': u'repetition', 'value': u'1'})
2018-06-07 00:43:20,481 p=14 u=root |  ok: [node3] => (item={'key': u'repetition', 'value': u'1'})
2018-06-07 00:43:20,489 p=14 u=root |  TASK [baseliner : check if we have host-specific ips] **************************
2018-06-07 00:43:20,489 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.094)       0:00:13.915 ********* 
2018-06-07 00:43:20,554 p=14 u=root |  ok: [node1]
2018-06-07 00:43:20,558 p=14 u=root |  ok: [node2]
2018-06-07 00:43:20,572 p=14 u=root |  ok: [node3]
2018-06-07 00:43:20,578 p=14 u=root |  TASK [baseliner : add host-specific ips to docker_flags] ***********************
2018-06-07 00:43:20,578 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.089)       0:00:14.005 ********* 
2018-06-07 00:43:20,617 p=14 u=root |  TASK [baseliner : check if we have host-specific environment] ******************
2018-06-07 00:43:20,618 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.039)       0:00:14.044 ********* 
2018-06-07 00:43:20,672 p=14 u=root |  ok: [node1]
2018-06-07 00:43:20,689 p=14 u=root |  ok: [node2]
2018-06-07 00:43:20,703 p=14 u=root |  ok: [node3]
2018-06-07 00:43:20,709 p=14 u=root |  TASK [baseliner : add host-specific environment to docker_flags] ***************
2018-06-07 00:43:20,710 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.091)       0:00:14.136 ********* 
2018-06-07 00:43:20,777 p=14 u=root |  ok: [node1] => (item={'key': u'CEPH_PUBLIC_NETWORK', 'value': u'128.110.152.0/22'})
2018-06-07 00:43:20,782 p=14 u=root |  ok: [node2] => (item={'key': u'CEPH_PUBLIC_NETWORK', 'value': u'128.110.152.0/22'})
2018-06-07 00:43:20,817 p=14 u=root |  ok: [node1] => (item={'key': u'MON_IP', 'value': u'128.110.153.197'})
2018-06-07 00:43:20,825 p=14 u=root |  ok: [node3] => (item={'key': u'CEPH_PUBLIC_NETWORK', 'value': u'128.110.152.0/22'})
2018-06-07 00:43:20,829 p=14 u=root |  ok: [node2] => (item={'key': u'MON_IP', 'value': u'128.110.153.197'})
2018-06-07 00:43:20,859 p=14 u=root |  ok: [node1] => (item={'key': u'MONITOR', 'value': True})
2018-06-07 00:43:20,868 p=14 u=root |  ok: [node3] => (item={'key': u'CLIENT', 'value': True})
2018-06-07 00:43:20,873 p=14 u=root |  ok: [node2] => (item={'key': u'OSD', 'value': True})
2018-06-07 00:43:20,908 p=14 u=root |  ok: [node3] => (item={'key': u'MON_IP', 'value': u'128.110.153.197'})
2018-06-07 00:43:20,913 p=14 u=root |  ok: [node2] => (item={'key': u'OSD_DEVICES', 'value': u'/dev/sdb'})
2018-06-07 00:43:20,922 p=14 u=root |  TASK [baseliner : add devices to docker_flags] *********************************
2018-06-07 00:43:20,922 p=14 u=root |  Thursday 07 June 2018  00:43:20 +0000 (0:00:00.212)       0:00:14.348 ********* 
2018-06-07 00:43:20,981 p=14 u=root |  ok: [node1] => (item=/dev/sdb)
2018-06-07 00:43:20,989 p=14 u=root |  ok: [node2] => (item=/dev/sdb)
2018-06-07 00:43:20,998 p=14 u=root |  ok: [node3] => (item=/dev/sdb)
2018-06-07 00:43:21,006 p=14 u=root |  TASK [baseliner : add network mode to docker_flags] ****************************
2018-06-07 00:43:21,006 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.084)       0:00:14.433 ********* 
2018-06-07 00:43:21,062 p=14 u=root |  ok: [node1]
2018-06-07 00:43:21,077 p=14 u=root |  ok: [node2]
2018-06-07 00:43:21,092 p=14 u=root |  ok: [node3]
2018-06-07 00:43:21,099 p=14 u=root |  TASK [baseliner : add ipc mode to docker_flags] ********************************
2018-06-07 00:43:21,099 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.092)       0:00:14.525 ********* 
2018-06-07 00:43:21,140 p=14 u=root |  TASK [baseliner : add ports to docker_flags] ***********************************
2018-06-07 00:43:21,140 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.041)       0:00:14.567 ********* 
2018-06-07 00:43:21,174 p=14 u=root |  TASK [baseliner : add volumes to docker_flags] *********************************
2018-06-07 00:43:21,175 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.034)       0:00:14.601 ********* 
2018-06-07 00:43:21,208 p=14 u=root |  TASK [baseliner : add default volumes to docker_flags] *************************
2018-06-07 00:43:21,208 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.033)       0:00:14.634 ********* 
2018-06-07 00:43:21,265 p=14 u=root |  ok: [node1]
2018-06-07 00:43:21,277 p=14 u=root |  ok: [node2]
2018-06-07 00:43:21,285 p=14 u=root |  ok: [node3]
2018-06-07 00:43:21,294 p=14 u=root |  TASK [baseliner : set entrypoint] **********************************************
2018-06-07 00:43:21,294 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.086)       0:00:14.721 ********* 
2018-06-07 00:43:21,335 p=14 u=root |  TASK [baseliner : set limits] **************************************************
2018-06-07 00:43:21,335 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.040)       0:00:14.762 ********* 
2018-06-07 00:43:21,374 p=14 u=root |  TASK [baseliner : add capabilities] ********************************************
2018-06-07 00:43:21,374 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.038)       0:00:14.800 ********* 
2018-06-07 00:43:21,416 p=14 u=root |  TASK [baseliner : remove capabilities] *****************************************
2018-06-07 00:43:21,416 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.042)       0:00:14.843 ********* 
2018-06-07 00:43:21,458 p=14 u=root |  TASK [baseliner : set privileged mode] *****************************************
2018-06-07 00:43:21,458 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.041)       0:00:14.884 ********* 
2018-06-07 00:43:21,498 p=14 u=root |  TASK [baseliner : set memory constraint] ***************************************
2018-06-07 00:43:21,498 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.040)       0:00:14.925 ********* 
2018-06-07 00:43:21,535 p=14 u=root |  TASK [baseliner : set memory-swap constraint] **********************************
2018-06-07 00:43:21,536 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.037)       0:00:14.962 ********* 
2018-06-07 00:43:21,575 p=14 u=root |  TASK [baseliner : set parent cgroup] *******************************************
2018-06-07 00:43:21,576 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.039)       0:00:15.002 ********* 
2018-06-07 00:43:21,613 p=14 u=root |  TASK [baseliner : debug] *******************************************************
2018-06-07 00:43:21,613 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.037)       0:00:15.039 ********* 
2018-06-07 00:43:21,669 p=14 u=root |  ok: [node1] => {
    "msg": "docker run --rm  -e repetition=\"1\" -e CEPH_PUBLIC_NETWORK=\"128.110.152.0/22\" -e MON_IP=\"128.110.153.197\" -e MONITOR=\"True\" --device /dev/sdb --net=host -v /tmp/baseliner_output_node1:/results -v /tmp/baseliner_output_node1:/output mariettesouppe/rados_bench:master-ec8d33f-luminous-ubuntu-16.04-x86_64 "
}
2018-06-07 00:43:21,684 p=14 u=root |  ok: [node2] => {
    "msg": "docker run --rm  -e repetition=\"1\" -e CEPH_PUBLIC_NETWORK=\"128.110.152.0/22\" -e MON_IP=\"128.110.153.197\" -e OSD=\"True\" -e OSD_DEVICES=\"/dev/sdb\" --device /dev/sdb --net=host -v /tmp/baseliner_output_node2:/results -v /tmp/baseliner_output_node2:/output mariettesouppe/rados_bench:master-ec8d33f-luminous-ubuntu-16.04-x86_64 "
}
2018-06-07 00:43:21,697 p=14 u=root |  ok: [node3] => {
    "msg": "docker run --rm  -e repetition=\"1\" -e CEPH_PUBLIC_NETWORK=\"128.110.152.0/22\" -e CLIENT=\"True\" -e MON_IP=\"128.110.153.197\" --device /dev/sdb --net=host -v /tmp/baseliner_output_node3:/results -v /tmp/baseliner_output_node3:/output mariettesouppe/rados_bench:master-ec8d33f-luminous-ubuntu-16.04-x86_64 "
}
2018-06-07 00:43:21,704 p=14 u=root |  TASK [baseliner : run container] ***********************************************
2018-06-07 00:43:21,705 p=14 u=root |  Thursday 07 June 2018  00:43:21 +0000 (0:00:00.091)       0:00:15.131 ********* 
2018-06-07 00:43:23,741 p=14 u=root |  changed: [node2]
2018-06-07 00:43:23,742 p=14 u=root |  changed: [node3]
2018-06-07 00:43:23,743 p=14 u=root |  changed: [node1]
2018-06-07 00:43:23,752 p=14 u=root |  TASK [baseliner : wait for containers in parallel mode and stop/kill them if they timeout] ***
2018-06-07 00:43:23,752 p=14 u=root |  Thursday 07 June 2018  00:43:23 +0000 (0:00:02.047)       0:00:17.178 ********* 
2018-06-07 00:43:23,776 p=14 u=root |  TASK [baseliner : wait for containers in single-node mode and stop/kill them if they timeout] ***
2018-06-07 00:43:23,777 p=14 u=root |  Thursday 07 June 2018  00:43:23 +0000 (0:00:00.024)       0:00:17.203 ********* 
2018-06-07 00:44:30,156 p=14 u=root |  changed: [node1 -> localhost]
2018-06-07 00:44:30,166 p=14 u=root |  TASK [baseliner : get wait result] *********************************************
2018-06-07 00:44:30,166 p=14 u=root |  Thursday 07 June 2018  00:44:30 +0000 (0:01:06.389)       0:01:23.592 ********* 
2018-06-07 00:44:30,187 p=14 u=root |  ok: [node1 -> localhost]
2018-06-07 00:44:30,198 p=14 u=root |  TASK [baseliner : debug] *******************************************************
2018-06-07 00:44:30,198 p=14 u=root |  Thursday 07 June 2018  00:44:30 +0000 (0:00:00.032)       0:01:23.624 ********* 
2018-06-07 00:44:30,214 p=14 u=root |  ok: [node1 -> localhost] => {
    "msg": "WAIT_FOR_RESULT:  3 hosts finished running their containers"
}
2018-06-07 00:44:30,224 p=14 u=root |  TASK [baseliner : get result of container execution] ***************************
2018-06-07 00:44:30,224 p=14 u=root |  Thursday 07 June 2018  00:44:30 +0000 (0:00:00.026)       0:01:23.650 ********* 
2018-06-07 00:44:31,171 p=14 u=root |  fatal: [node2]: FAILED! => {"ansible_job_id": "991324847773.11861", "changed": true, "cmd": "docker run --rm --name baseliner_node2  -e repetition=\"1\" -e CEPH_PUBLIC_NETWORK=\"128.110.152.0/22\" -e MON_IP=\"128.110.153.197\" -e OSD=\"True\" -e OSD_DEVICES=\"/dev/sdb\" --device /dev/sdb --net=host -v /tmp/baseliner_output_node2:/results -v /tmp/baseliner_output_node2:/output mariettesouppe/rados_bench:master-ec8d33f-luminous-ubuntu-16.04-x86_64 ", "delta": "0:00:00.194007", "end": "2018-06-06 18:43:23.013120", "failed": true, "finished": 1, "msg": "non-zero return code", "rc": 127, "start": "2018-06-06 18:43:22.819113", "stderr": "docker: Error response from daemon: linux runtime spec devices: error gathering device information while adding custom device \"/dev/sdb\": lstat /dev/sdb: no such file or directory.", "stderr_lines": ["docker: Error response from daemon: linux runtime spec devices: error gathering device information while adding custom device \"/dev/sdb\": lstat /dev/sdb: no such file or directory."], "stdout": "", "stdout_lines": []}
2018-06-07 00:44:31,172 p=14 u=root |  ...ignoring
2018-06-07 00:44:31,173 p=14 u=root |  fatal: [node1]: FAILED! => {"ansible_job_id": "912412615580.5091", "changed": true, "cmd": "docker run --rm --name baseliner_node1  -e repetition=\"1\" -e CEPH_PUBLIC_NETWORK=\"128.110.152.0/22\" -e MON_IP=\"128.110.153.197\" -e MONITOR=\"True\" --device /dev/sdb --net=host -v /tmp/baseliner_output_node1:/results -v /tmp/baseliner_output_node1:/output mariettesouppe/rados_bench:master-ec8d33f-luminous-ubuntu-16.04-x86_64 ", "delta": "0:00:00.396819", "end": "2018-06-06 18:43:23.215674", "failed": true, "finished": 1, "msg": "non-zero return code", "rc": 127, "start": "2018-06-06 18:43:22.818855", "stderr": "docker: Error response from daemon: linux runtime spec devices: error gathering device information while adding custom device \"/dev/sdb\": lstat /dev/sdb: no such file or directory.", "stderr_lines": ["docker: Error response from daemon: linux runtime spec devices: error gathering device information while adding custom device \"/dev/sdb\": lstat /dev/sdb: no such file or directory."], "stdout": "", "stdout_lines": []}
2018-06-07 00:44:31,173 p=14 u=root |  ...ignoring
2018-06-07 00:44:31,174 p=14 u=root |  fatal: [node3]: FAILED! => {"ansible_job_id": "251935140567.10067", "changed": true, "cmd": "docker run --rm --name baseliner_node3  -e repetition=\"1\" -e CEPH_PUBLIC_NETWORK=\"128.110.152.0/22\" -e CLIENT=\"True\" -e MON_IP=\"128.110.153.197\" --device /dev/sdb --net=host -v /tmp/baseliner_output_node3:/results -v /tmp/baseliner_output_node3:/output mariettesouppe/rados_bench:master-ec8d33f-luminous-ubuntu-16.04-x86_64 ", "delta": "0:00:00.214062", "end": "2018-06-06 18:43:23.039154", "failed": true, "finished": 1, "msg": "non-zero return code", "rc": 127, "start": "2018-06-06 18:43:22.825092", "stderr": "docker: Error response from daemon: linux runtime spec devices: error gathering device information while adding custom device \"/dev/sdb\": lstat /dev/sdb: no such file or directory.", "stderr_lines": ["docker: Error response from daemon: linux runtime spec devices: error gathering device information while adding custom device \"/dev/sdb\": lstat /dev/sdb: no such file or directory."], "stdout": "", "stdout_lines": []}
2018-06-07 00:44:31,174 p=14 u=root |  ...ignoring
2018-06-07 00:44:31,182 p=14 u=root |  TASK [baseliner : set fact to store result of bench execution] *****************
2018-06-07 00:44:31,182 p=14 u=root |  Thursday 07 June 2018  00:44:31 +0000 (0:00:00.957)       0:01:24.608 ********* 
2018-06-07 00:44:31,203 p=14 u=root |  ok: [node1 -> localhost]
2018-06-07 00:44:31,214 p=14 u=root |  TASK [baseliner : record elapsed time in output folder] ************************
2018-06-07 00:44:31,215 p=14 u=root |  Thursday 07 June 2018  00:44:31 +0000 (0:00:00.032)       0:01:24.641 ********* 
2018-06-07 00:44:31,440 p=14 u=root |  changed: [node2 -> localhost]
2018-06-07 00:44:31,452 p=14 u=root |  changed: [node1 -> localhost]
2018-06-07 00:44:31,475 p=14 u=root |  changed: [node3 -> localhost]
2018-06-07 00:44:31,484 p=14 u=root |  TASK [baseliner : capture stdout] **********************************************
2018-06-07 00:44:31,484 p=14 u=root |  Thursday 07 June 2018  00:44:31 +0000 (0:00:00.269)       0:01:24.910 ********* 
2018-06-07 00:44:31,724 p=14 u=root |  changed: [node2 -> localhost]
2018-06-07 00:44:31,725 p=14 u=root |  changed: [node1 -> localhost]
2018-06-07 00:44:31,757 p=14 u=root |  changed: [node3 -> localhost]
2018-06-07 00:44:31,767 p=14 u=root |  TASK [baseliner : capture stderr] **********************************************
2018-06-07 00:44:31,768 p=14 u=root |  Thursday 07 June 2018  00:44:31 +0000 (0:00:00.283)       0:01:25.194 ********* 
2018-06-07 00:44:31,990 p=14 u=root |  changed: [node1 -> localhost]
2018-06-07 00:44:32,000 p=14 u=root |  changed: [node2 -> localhost]
2018-06-07 00:44:32,004 p=14 u=root |  changed: [node3 -> localhost]
2018-06-07 00:44:32,012 p=14 u=root |  TASK [baseliner : debug] *******************************************************
2018-06-07 00:44:32,012 p=14 u=root |  Thursday 07 June 2018  00:44:32 +0000 (0:00:00.244)       0:01:25.438 ********* 
2018-06-07 00:44:32,077 p=14 u=root |  ok: [node2] => {
    "msg": "WARNING: container terminated with non-zero exit code."
}
2018-06-07 00:44:32,082 p=14 u=root |  ok: [node1] => {
    "msg": "WARNING: container terminated with non-zero exit code."
}
2018-06-07 00:44:32,087 p=14 u=root |  ok: [node3] => {
    "msg": "WARNING: container terminated with non-zero exit code."
}
2018-06-07 00:44:32,094 p=14 u=root |  TASK [baseliner : run compose benchmark] ***************************************
2018-06-07 00:44:32,094 p=14 u=root |  Thursday 07 June 2018  00:44:32 +0000 (0:00:00.081)       0:01:25.520 ********* 
2018-06-07 00:44:32,132 p=14 u=root |  TASK [baseliner : run script benchmark] ****************************************
2018-06-07 00:44:32,132 p=14 u=root |  Thursday 07 June 2018  00:44:32 +0000 (0:00:00.038)       0:01:25.558 ********* 
2018-06-07 00:44:32,171 p=14 u=root |  TASK [baseliner : download results] ********************************************
2018-06-07 00:44:32,171 p=14 u=root |  Thursday 07 June 2018  00:44:32 +0000 (0:00:00.039)       0:01:25.598 ********* 
2018-06-07 00:44:32,229 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/download-output.yml for node1, node2, node3
2018-06-07 00:44:32,289 p=14 u=root |  TASK [baseliner : get any bench-specific files] ********************************
2018-06-07 00:44:32,289 p=14 u=root |  Thursday 07 June 2018  00:44:32 +0000 (0:00:00.118)       0:01:25.716 ********* 
2018-06-07 00:44:33,808 p=14 u=root |  changed: [node3] => (item=/tmp/baseliner_output_node3)
2018-06-07 00:44:33,833 p=14 u=root |  changed: [node1] => (item=/tmp/baseliner_output_node1)
2018-06-07 00:44:33,833 p=14 u=root |  changed: [node2] => (item=/tmp/baseliner_output_node2)
2018-06-07 00:44:33,844 p=14 u=root |  TASK [baseliner : delete remote folder after transfer] *************************
2018-06-07 00:44:33,845 p=14 u=root |  Thursday 07 June 2018  00:44:33 +0000 (0:00:01.555)       0:01:27.271 ********* 
2018-06-07 00:44:34,685 p=14 u=root |  changed: [node2] => (item=/tmp/baseliner_output_node2)
2018-06-07 00:44:34,690 p=14 u=root |  changed: [node3] => (item=/tmp/baseliner_output_node3)
2018-06-07 00:44:34,692 p=14 u=root |  changed: [node1] => (item=/tmp/baseliner_output_node1)
2018-06-07 00:44:34,699 p=14 u=root |  TASK [baseliner : check if we should fail fast] ********************************
2018-06-07 00:44:34,699 p=14 u=root |  Thursday 07 June 2018  00:44:34 +0000 (0:00:00.854)       0:01:28.125 ********* 
2018-06-07 00:44:34,756 p=14 u=root |  included: /etc/ansible/roles/baseliner/tasks/fail-fast.yml for node1, node2, node3
2018-06-07 00:44:34,855 p=14 u=root |  TASK [baseliner : failfast for single-node mode] *******************************
2018-06-07 00:44:34,856 p=14 u=root |  Thursday 07 June 2018  00:44:34 +0000 (0:00:00.156)       0:01:28.282 ********* 
2018-06-07 00:44:34,916 p=14 u=root |  fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "benchmark failed"}
2018-06-07 00:44:34,917 p=14 u=root |  NO MORE HOSTS LEFT *************************************************************
2018-06-07 00:44:34,917 p=14 u=root |  PLAY RECAP *********************************************************************
2018-06-07 00:44:34,917 p=14 u=root |  node1                      : ok=50   changed=16   unreachable=0    failed=1   
2018-06-07 00:44:34,918 p=14 u=root |  node2                      : ok=43   changed=13   unreachable=0    failed=0   
2018-06-07 00:44:34,918 p=14 u=root |  node3                      : ok=43   changed=13   unreachable=0    failed=0   
2018-06-07 00:44:34,918 p=14 u=root |  Thursday 07 June 2018  00:44:34 +0000 (0:00:00.062)       0:01:28.344 ********* 
2018-06-07 00:44:34,918 p=14 u=root |  =============================================================================== 
2018-06-07 00:44:34,918 p=14 u=root |  baseliner : wait for containers in single-node mode and stop/kill them if they timeout -- 66.39s
2018-06-07 00:44:34,918 p=14 u=root |  Gathering Facts --------------------------------------------------------- 3.01s
2018-06-07 00:44:34,918 p=14 u=root |  baseliner : run container ----------------------------------------------- 2.05s
2018-06-07 00:44:34,918 p=14 u=root |  baseliner : pull image -------------------------------------------------- 1.76s
2018-06-07 00:44:34,918 p=14 u=root |  baseliner : get any bench-specific files -------------------------------- 1.56s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : install facter ---------------------------------------------- 1.44s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : stop any running container ---------------------------------- 1.00s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : get result of container execution --------------------------- 0.96s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : check if image already exists ------------------------------- 0.88s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : remove containers to avoid name clashes --------------------- 0.87s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : delete remote folder after transfer ------------------------- 0.85s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : remove remote results folder -------------------------------- 0.85s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : create remote results folder -------------------------------- 0.83s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : store facts about remotes ----------------------------------- 0.78s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : capture stdout ---------------------------------------------- 0.28s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : record elapsed time in output folder ------------------------ 0.27s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : ensure results folder exists -------------------------------- 0.25s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : capture stderr ---------------------------------------------- 0.24s
2018-06-07 00:44:34,919 p=14 u=root |  baseliner : add host-specific environment to docker_flags --------------- 0.21s
2018-06-07 00:44:34,920 p=14 u=root |  baseliner : ensure output folder exists --------------------------------- 0.18s
2018-06-07 00:44:34,920 p=14 u=root |  Playbook run took 0 days, 0 hours, 1 minutes, 28 seconds
